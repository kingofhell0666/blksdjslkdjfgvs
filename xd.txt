<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gartic.io Player Listesi</title>
    <style>
        body {
            font-family: Arial, sans-serif;
        }

        .user {
            display: flex;
            margin-bottom: 10px;
        }

        .user img {
            border-radius: 50%;
            margin-right: 10px;
        }

        .user .flex {
            display: flex;
            align-items: center;
        }

        .download-btn, .discord-profile-btn {
            cursor: pointer;
            color: #007BFF;
        }

        #profileContainer {
            display: none;
            position: fixed;
            top: 20%;
            left: 50%;
            transform: translateX(-50%);
            background: #fff;
            padding: 20px;
            border: 1px solid #ddd;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
        }

        #searchInput {
            margin-bottom: 20px;
            padding: 10px;
            width: 100%;
            max-width: 300px;
            margin-left: auto;
            margin-right: auto;
        }

        #filters {
            margin-bottom: 20px;
            display: flex;
            justify-content: space-between;
            max-width: 300px;
            margin-left: auto;
            margin-right: auto;
        }
    </style>
</head>
<body>

    <h1>Gartic.io Player Listesi</h1>

    <input type="text" id="searchInput" placeholder="Kullanıcı ara..." onkeyup="searchUsers()">
    
    <div id="filters">
        <label><input type="checkbox" id="havefotoCheckbox" onclick="filterUsers()"> Fotoğrafı olanlar</label>
        <label><input type="checkbox" id="nofotoCheckbox" onclick="filterUsers()"> Fotoğrafı olmayanlar</label>
        <label><input type="checkbox" id="discordCheckbox" onclick="filterUsers()"> Discord profili olanlar</label>
    </div>

    <p id="totalPlayerCount">Toplam kişi sayısı: 0</p>
    <p id="playerCount">Aktif oyuncu sayısı: 0</p>

    <div id="usersContainer"></div>

    <div id="profileContainer">
        <h2 id="profileTitle"></h2>
        <img id="profileImage" width="100">
        <p id="profileName"></p>
        <button onclick="closeProfile()">Kapat</button>
    </div>

   <script>
    const f = (x) => { return document.querySelector(x) }
    const fa = (x) => { return document.querySelectorAll(x) }

    let totalPlayerCount = 0;

    function updatePlayerCount(count) {
        const playerCountElement = f("#playerCount");
        playerCountElement.textContent = ``;
    }

    function updateTotalPlayerCount(count) {
        const totalPlayerCountElement = f("#totalPlayerCount");
        totalPlayerCountElement.textContent = `Toplam kişi sayısı: ${count}`;
    }

    function addPlayers(users, roomlink) {
        const usersContainer = f("#usersContainer");
        totalPlayerCount += users.length;
        updateTotalPlayerCount(totalPlayerCount);
        updatePlayerCount(users.length);

        users.forEach(user => {
            const foto = user.foto || "https://gartic.io/static/images/avatar/svg/" + user.avatar + ".svg";
            const uclass = user.foto ? "havefoto" : "nofoto";
            const discordClass = foto.includes("cdn.discordapp.com") ? "discord" : "";

            const discordID = extractDiscordID(foto);
            const discordProfileButton = discordClass ? `<span class="discord-profile-btn" onclick="openDiscordProfile('${discordID}')">Discord Profili</span>` : "";

            usersContainer.innerHTML += `
                <div class="user flex ${uclass} ${discordClass}">
                    <img width="40" src="${foto}" alt="">
                    <div>
                        <b>${user.nick}</b><br>
                        <i>${user.pontos} pt</i>&nbsp;&nbsp;
                        <a target="_blank" href="https://gartic.io/${roomlink}">#${roomlink}</a><br>
                        <span class="download-btn" onclick="downloadPhoto('${foto}', '${user.nick}')">Fotoğrafı İndir</span>
                        ${discordProfileButton}
                    </div>
                </div>
            `;
        });
    }

    function openDiscordProfile(discordID) {
        if (discordID) {
            window.open(`https://discordlookup.com/user/${discordID}`, '_blank');
        }
    }

    function extractDiscordID(avatarURL) {
        const matches = avatarURL.match(/\/avatars\/(\d+)\//);
        return matches ? matches[1] : null;
    }

    function listusers(lang) {
        const usersContainer = f("#usersContainer");
        usersContainer.innerHTML = "";
        const rooms = [];

        fetch(`https://gartic.io/req/list?search=&language[]=8`)
            .then(x => x.json())
            .then(x => {
                x.forEach(room => {
                    rooms.push(room.code); // Odanın kodlarını bir diziye ekliyoruz
                });

                let index = 0; // Her odanın isteklerini sırayla göndereceğiz

                function fetchRoomData() {
                    if (index >= rooms.length) return; // Eğer tüm odalar işlendiyse, işlemi bitir
                    const roomCode = rooms[index];
                    index++; // Sonraki odaya geç

                    fetch(`https://gartic.io/serverViewer?v3=1&room=${roomCode}`)
                        .then(x => x.text())
                        .then(x => {
                            const roomSC = x.split("https://")[1].split(".")[0];
                            let ws = new WebSocket(`wss://${roomSC}.gartic.io/socket.io/?EIO=3&transport=websocket`);

                            ws.onopen = () => {
                                ws.send('42[12,{"v":20000,"platform":0,"sala":"' + room.id + '"}]')
                                ws.send('42[46,0]')
                            }

                            ws.onmessage = (msg) => {
                                if (msg.data.indexOf('42["5"') !== -1) {
                                    addPlayers(JSON.parse('[{"id":' + msg.data.split('[{"id":')[1].split("}]")[0] + "}]"), roomCode);
                                    filterUsers();
                                }
                            }
                        })
                        .finally(() => {
                            // 2 saniye sonra bir sonraki odanın verilerini çekmeye başlıyoruz
                            setTimeout(fetchRoomData, 2000);
                        });
                }

                // İlk odanın verisini çekmeye başlıyoruz
                fetchRoomData();
            })
    }

    function filterUsers() {
        const users = fa(".user");
        const havefotoCheckbox = f("#havefotoCheckbox");
        const nofotoCheckbox = f("#nofotoCheckbox");
        const discordCheckbox = f("#discordCheckbox");

        if (havefotoCheckbox.checked) {
            nofotoCheckbox.disabled = false;
            discordCheckbox.disabled = true;
        } else if (nofotoCheckbox.checked) {
            havefotoCheckbox.disabled = false;
            discordCheckbox.disabled = true;
        } else if (discordCheckbox.checked) {
            havefotoCheckbox.disabled = true;
            nofotoCheckbox.disabled = true;
        } else {
            havefotoCheckbox.disabled = false;
            nofotoCheckbox.disabled = false;
            discordCheckbox.disabled = false;
        }

        users.forEach(user => {
            const havefoto = user.classList.contains("havefoto");
            const nofoto = user.classList.contains("nofoto");
            const discord = user.classList.contains("discord");

            if ((havefotoCheckbox.checked && havefoto) || (nofotoCheckbox.checked && nofoto) || (discordCheckbox.checked && discord)) {
                user.style.display = "flex";
            } else {
                user.style.display = "none";
            }
        });

        updatePlayerCount(document.querySelectorAll('.user:visible').length);
    }

    function searchUsers() {
        const users = fa(".user");
        const searchInput = f("#searchInput").value.toLowerCase();

        users.forEach(user => {
            const userName = user.querySelector("b").textContent.toLowerCase();
            user.style.display = userName.includes(searchInput) ? "flex" : "none";
        });

        updatePlayerCount(document.querySelectorAll('.user:visible').length);
    }

    function downloadPhoto(photoURL, userName) {
        const downloadLink = document.createElement('a');
        downloadLink.href = photoURL;
        downloadLink.download = `${userName}_photo.png`;
        downloadLink.target = "_blank";
        downloadLink.click();
    }

    listusers(8);
</script>

</body>
</html>
