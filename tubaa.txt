<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Kullanıcılar Listesi</title>
    <!-- Bootstrap CSS Linki -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .user {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            margin: 10px;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 8px;
            width: 120px;
            background-color: #f8f9fa;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s;
        }
        .user img {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            margin-bottom: 10px;
        }
        .user:hover {
            transform: translateY(-5px);
        }
        .user .download-btn, .user .discord-profile-btn {
            cursor: pointer;
            color: blue;
            text-decoration: underline;
            font-size: 12px;
        }
        .user b {
            font-size: 14px;
        }
        .container {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-around;
        }
        .search-container {
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1 class="my-4 text-center">Kullanıcılar Listesi</h1>

        <!-- Arama ve Filtreleme -->
        <div class="search-container d-flex justify-content-between mb-3">
            <input type="text" id="searchInput" class="form-control w-50" oninput="searchUsers()" placeholder="Kullanıcı Ara...">
            <div>
                <label>
                    <input type="checkbox" id="havefotoCheckbox" onclick="filterUsers()"> Fotoğrafı Olan
                </label>
                <label class="ml-2">
                    <input type="checkbox" id="nofotoCheckbox" onclick="filterUsers()"> Fotoğrafı Olmayan
                </label>
            </div>
        </div>

        <div id="playerCount" class="text-center mb-3">0 kullanıcı</div>
        <div id="totalPlayerCount" class="text-center mb-3">Toplam kişi sayısı: 0</div>

        <div id="usersContainer" class="container"></div>

        <div id="profileContainer" style="display:none; flex-direction: column; align-items: center;">
            <h2 id="profileTitle"></h2>
            <img id="profileImage" width="100" alt="Profile Photo">
            <p id="profileName"></p>
            <button class="btn btn-secondary" onclick="closeProfile()">Kapat</button>
        </div>
    </div>

    <!-- Bootstrap JS ve jQuery Bağlantıları -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.0/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
        const f = (x) => { return document.querySelector(x) }
        const fa = (x) => { return document.querySelectorAll(x) }

        let totalPlayerCount = 0;

        function updatePlayerCount(count) {
            const playerCountElement = f("#playerCount");
            playerCountElement.textContent = `${count} kullanıcı`;
        }

        function updateTotalPlayerCount(count) {
            const totalPlayerCountElement = f("#totalPlayerCount");
            totalPlayerCountElement.textContent = `Toplam kişi sayısı: ${count}`;
        }

        function addPlayers(users, roomlink) {
            const usersContainer = f("#usersContainer");
            totalPlayerCount += users.length;
            updateTotalPlayerCount(totalPlayerCount);
            updatePlayerCount(users.length);

            users.forEach(user => {
                const foto = user.foto || "https://gartic.io/static/images/avatar/svg/" + user.avatar + ".svg";
                const uclass = user.foto ? "havefoto" : "nofoto";

                usersContainer.innerHTML += `
                    <div class="user ${uclass} text-center">
                        <img src="${foto}" alt="">
                        <b>${user.nick}</b><br>
                        <i>${user.pontos} pt</i><br>
                        <a target="_blank" href="https://gartic.io/${roomlink}">#${roomlink}</a><br>
                        <span class="download-btn" onclick="openProfile('${user.nick}', '${foto}')">Profili Görüntüle</span>
                    </div>
                `;
            });
        }

        function openProfile(nick, foto) {
            const profileContainer = f("#profileContainer");
            const profileTitle = f("#profileTitle");
            const profileImage = f("#profileImage");
            const profileName = f("#profileName");

            profileTitle.textContent = `Profil: ${nick}`;
            profileImage.src = foto;
            profileImage.alt = `${nick}'s Profile Photo`;
            profileName.textContent = `Kullanıcı Adı: ${nick}`;

            profileContainer.style.display = 'flex';
        }

        function closeProfile() {
            const profileContainer = f("#profileContainer");
            profileContainer.style.display = 'none';
        }

        function searchUsers() {
            const users = fa(".user");
            const searchInput = f("#searchInput").value.toLowerCase();

            users.forEach(user => {
                const userName = user.querySelector("b").textContent.toLowerCase();
                user.style.display = userName.includes(searchInput) ? "block" : "none";
            });

            updatePlayerCount(document.querySelectorAll('.user[style="display: block;"]').length);
        }

        function filterUsers() {
            const users = fa(".user");
            const havefotoCheckbox = f("#havefotoCheckbox");
            const nofotoCheckbox = f("#nofotoCheckbox");

            const isHaveFotoChecked = havefotoCheckbox.checked;
            const isNoFotoChecked = nofotoCheckbox.checked;

            if (!isHaveFotoChecked && !isNoFotoChecked) {
                users.forEach(user => {
                    user.style.display = "none";
                });
            } else {
                users.forEach(user => {
                    const havefoto = user.classList.contains("havefoto");
                    const nofoto = user.classList.contains("nofoto");

                    if ((isHaveFotoChecked && havefoto) || (isNoFotoChecked && nofoto)) {
                        user.style.display = "block";
                    } else {
                        user.style.display = "none";
                    }
                });
            }

            updatePlayerCount(document.querySelectorAll('.user[style="display: block;"]').length);
        }

        function listusers(lang) {
            const usersContainer = f("#usersContainer");
            usersContainer.innerHTML = "";

            fetch(`https://gartic.io/req/list?search=&language[]=${lang}`)
                .then(x => x.json())
                .then(rooms => {
                    let index = 0;

                    function fetchRoom() {
                        if (index >= rooms.length) return;

                        const room = rooms[index];
                        index++;

                        fetch(`https://gartic.io/serverViewer?v3=1&room=${room.code}`)
                            .then(x => x.text())
                            .then(x => {
                                const roomSC = x.split("https://")[1].split(".")[0];
                                let ws = new WebSocket(`wss://${roomSC}.gartic.io/socket.io/?EIO=3&transport=websocket`);

                                ws.onopen = () => {
                                    ws.send('42[12,{"v":20000,"platform":0,"sala":"' + room.id + '"}]')
                                    ws.send('42[46,0]')
                                }

                                ws.onmessage = (msg) => {
                                    if (msg.data.indexOf('42["5"') !== -1) {
                                        addPlayers(JSON.parse('[{"id":' + msg.data.split('[{"id":')[1].split("}]")[0] + "}]"), room.code);
                                        filterUsers();
                                    }
                                }

                                setTimeout(fetchRoom, 2000);
                            })
                            .catch(error => {
                                console.error(`Error fetching room data for ${room.code}:`, error);
                                setTimeout(fetchRoom, 2000);
                            });
                    }

                    fetchRoom();
                })
                .catch(error => console.error('Error fetching room list:', error));
        }

        listusers("tr");
    </script>
</body>
</html>
