<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gartic Kullanıcı Listesi</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 0;
        }
        #profileContainer {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
        }
        .user {
            background-color: #fff;
            padding: 10px;
            margin: 10px;
            border-radius: 5px;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }
        .user img {
            border-radius: 50%;
        }
        .download-btn, .discord-profile-btn {
            cursor: pointer;
            color: #007bff;
            text-decoration: underline;
        }
        .download-btn:hover, .discord-profile-btn:hover {
            color: #0056b3;
        }
    </style>
</head>
<body>

    <div>
        <h1>Gartic Kullanıcıları</h1>
        <div>
            <label><input type="checkbox" id="havefotoCheckbox"> Fotoğrafı Olanlar</label>
            <label><input type="checkbox" id="nofotoCheckbox"> Fotoğrafı Olmayanlar</label>
            <label><input type="checkbox" id="discordCheckbox"> Discord Profili Olanlar</label>
        </div>
        <input type="text" id="searchInput" placeholder="Kullanıcı Ara" oninput="searchUsers()">
        <div id="usersContainer"></div>
    </div>

    <div id="profileContainer">
        <h2 id="profileTitle"></h2>
        <img id="profileImage" width="100" alt="">
        <p id="profileName"></p>
        <button onclick="closeProfile()">Kapat</button>
    </div>

    <div>
        <h2 id="totalPlayerCount"></h2>
        <h3>Aktif Kişi Sayısı: <span id="playerCount"></span></h3>
    </div>

    <script>
        const f = (x) => { return document.querySelector(x) }
        const fa = (x) => { return document.querySelectorAll(x) }

        let totalPlayerCount = 0;

        function updatePlayerCount(count) {
            const playerCountElement = f("#playerCount");
            playerCountElement.textContent = count;
        }

        function updateTotalPlayerCount(count) {
            const totalPlayerCountElement = f("#totalPlayerCount");
            totalPlayerCountElement.textContent = `Toplam kişi sayısı: ${count}`;
        }

        function addPlayers(users, roomlink) {
            const usersContainer = f("#usersContainer");
            totalPlayerCount += users.length;
            updateTotalPlayerCount(totalPlayerCount);
            updatePlayerCount(users.length);

            users.forEach(user => {
                const foto = user.foto || "https://gartic.io/static/images/avatar/svg/" + user.avatar + ".svg";
                const uclass = user.foto ? "havefoto" : "nofoto";
                const discordClass = foto.includes("cdn.discordapp.com") ? "discord" : "";

                usersContainer.innerHTML += `
                    <div class="user flex ${uclass} ${discordClass}">
                        <img width="40" src="${foto}" alt="">
                        <div>
                            <b>${user.nick}</b><br>
                            <i>${user.pontos} pt</i>&nbsp;&nbsp;
                            <a target="_blank" href="https://gartic.io/${roomlink}">#${roomlink}</a><br>
                            <span class="download-btn" onclick="downloadPhoto('${foto}', '${user.nick}')">Fotoğrafı İndir</span>
                            ${discordClass ? `<span class="discord-profile-btn" onclick="openDiscordProfile('${foto}')">Discord Profili</span>` : ""}
                        </div>
                    </div>
                `;
            });
        }

        function openDiscordProfile(avatarURL) {
            const discordID = extractDiscordID(avatarURL);
            if (discordID) {
                window.open(`https://discordlookup.com/user/${discordID}`, '_blank');
            }
        }

        function openProfile(nick, foto) {
            const profileContainer = f("#profileContainer");
            const profileTitle = f("#profileTitle");
            const profileImage = f("#profileImage");
            const profileName = f("#profileName");

            profileTitle.textContent = `Profile: ${nick}`;
            profileImage.src = foto;
            profileImage.alt = `${nick}'s Profile Photo`;
            profileName.textContent = `Username: ${nick}`;

            profileContainer.style.display = 'flex';
        }

        function closeProfile() {
            const profileContainer = f("#profileContainer");
            profileContainer.style.display = 'none';
        }

        function downloadPhoto(photoURL, userName) {
            const downloadLink = document.createElement('a');
            downloadLink.href = photoURL;
            downloadLink.download = `${userName}_photo.png`;
            downloadLink.target = "_blank";
            downloadLink.click();
        }

        function filterUsers() {
            const users = fa(".user");
            const havefotoCheckbox = f("#havefotoCheckbox");
            const nofotoCheckbox = f("#nofotoCheckbox");
            const discordCheckbox = f("#discordCheckbox");

            if (havefotoCheckbox.checked) {
                nofotoCheckbox.disabled = false;
                discordCheckbox.disabled = true;
            } else if (nofotoCheckbox.checked) {
                havefotoCheckbox.disabled = false;
                discordCheckbox.disabled = true;
            } else if (discordCheckbox.checked) {
                havefotoCheckbox.disabled = true;
                nofotoCheckbox.disabled = true;
            } else {
                havefotoCheckbox.disabled = false;
                nofotoCheckbox.disabled = false;
                discordCheckbox.disabled = false;
            }

            users.forEach(user => {
                const havefoto = user.classList.contains("havefoto");
                const nofoto = user.classList.contains("nofoto");
                const discord = user.classList.contains("discord");

                if ((havefotoCheckbox.checked && havefoto) || (nofotoCheckbox.checked && nofoto) || (discordCheckbox.checked && discord)) {
                    user.style.display = "flex";
                } else {
                    user.style.display = "none";
                }
            });

            updatePlayerCount(document.querySelectorAll('.user:visible').length);
        }

        function searchUsers() {
            const users = fa(".user");
            const searchInput = f("#searchInput").value.toLowerCase();

            users.forEach(user => {
                const userName = user.querySelector("b").textContent.toLowerCase();
                user.style.display = userName.includes(searchInput) ? "flex" : "none";
            });

            updatePlayerCount(document.querySelectorAll('.user:visible').length);
        }

        function listusers(lang) {
            const usersContainer = f("#usersContainer");
            usersContainer.innerHTML = "";

            fetch(`https://gartic.io/req/list?search=&language[]=${lang}`)
                .then(x => x.json())
                .then(rooms => {
                    let index = 0;

                    function fetchRoom() {
                        if (index >= rooms.length) return;

                        const room = rooms[index];
                        index++;

                        fetch(`https://gartic.io/serverViewer?v3=1&room=${room.code}`)
                            .then(x => x.text())
                            .then(x => {
                                const roomSC = x.split("https://")[1].split(".")[0];
                                let ws = new WebSocket(`wss://${roomSC}.gartic.io/socket.io/?EIO=3&transport=websocket`);

                                ws.onopen = () => {
                                    ws.send('42[12,{"v":20000,"platform":0,"sala":"' + room.id + '"}]')
                                    ws.send('42[46,0]')
                                }

                                ws.onmessage = (msg) => {
                                    if (msg.data.indexOf('42["5"') !== -1) {
                                        addPlayers(JSON.parse('[{"id":' + msg.data.split('[{"id":')[1].split("}]")[0] + "}]"), room.code);
                                        filterUsers();
                                    }
                                }

                                setTimeout(fetchRoom, 2000);
                            })
                            .catch(error => {
                                console.error(`Error fetching room data for ${room.code}:`, error);
                                setTimeout(fetchRoom, 2000);
                            });
                    }

                    fetchRoom();
                })
                .catch(error => console.error('Error fetching room list:', error));
        }

        function extractDiscordID(avatarURL) {
            const matches = avatarURL.match(/\/avatars\/(\d+)\//);
            return matches ? matches[1] : null;
        }

        listusers(8);
    </script>
</body>
</html>
