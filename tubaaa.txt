<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Kullanıcılar Listesi</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            margin: 0;
            padding: 20px;
        }

        h1 {
            text-align: center;
            color: #333;
        }

        .filters {
            text-align: center;
            margin-bottom: 20px;
        }

        .filters label {
            margin: 0 10px;
        }

        .filters input {
            margin-right: 5px;
        }

        #searchInput {
            width: 100%;
            padding: 10px;
            font-size: 14px;
            margin-bottom: 20px;
            border-radius: 5px;
            border: 1px solid #ccc;
        }

        #usersContainer {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
            gap: 15px;
            justify-items: center;
        }

        .user {
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            padding: 10px;
            width: 120px;
            text-align: center;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .user:hover {
            transform: scale(1.05);
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
        }

        .user img {
            border-radius: 50%;
            width: 50px;
            height: 50px;
            object-fit: cover;
            margin-bottom: 10px;
        }

        .user b {
            display: block;
            font-size: 14px;
            color: #333;
            margin-bottom: 5px;
        }

        .user i {
            font-size: 12px;
            color: #888;
        }

        .download-btn, .discord-profile-btn {
            cursor: pointer;
            color: #007BFF;
            text-decoration: underline;
            font-size: 12px;
        }

        .download-btn:hover, .discord-profile-btn:hover {
            color: #0056b3;
        }

        #profileContainer {
            display: none;
            flex-direction: column;
            align-items: center;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0, 0, 0, 0.6);
            z-index: 1000;
            justify-content: center;
            padding: 20px;
        }

        #profileContainer div {
            background-color: #fff;
            border-radius: 8px;
            padding: 20px;
            width: 300px;
            text-align: center;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
        }

        #profileImage {
            border-radius: 50%;
            width: 80px;
            height: 80px;
            margin-bottom: 10px;
            object-fit: cover;
        }

        button {
            background-color: #007BFF;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
        }

        button:hover {
            background-color: #0056b3;
        }

        #totalPlayerCount {
            text-align: center;
            margin-top: 20px;
            font-size: 14px;
        }
    </style>
</head>
<body>
    <h1>Kullanıcılar Listesi</h1>

    <div class="filters">
        <label>
            <input type="checkbox" id="havefotoCheckbox" onclick="filterUsers()"> Fotoğrafı Olan
        </label>
        <label>
            <input type="checkbox" id="nofotoCheckbox" onclick="filterUsers()"> Fotoğrafı Olmayan
        </label>
    </div>

    <input type="text" id="searchInput" oninput="searchUsers()" placeholder="Kullanıcı Ara...">

    <div id="playerCount">0 kullanıcı</div>
    <div id="totalPlayerCount">Toplam kişi sayısı: 0</div>

    <div id="usersContainer"></div>

    <div id="profileContainer">
        <div>
            <h2 id="profileTitle"></h2>
            <img id="profileImage" alt="Profile Photo">
            <p id="profileName"></p>
            <button onclick="closeProfile()">Kapat</button>
        </div>
    </div>

    <script>
        const f = (x) => { return document.querySelector(x) }
        const fa = (x) => { return document.querySelectorAll(x) }

        let totalPlayerCount = 0;

        function updatePlayerCount(count) {
            const playerCountElement = f("#playerCount");
            playerCountElement.textContent = `${count} kullanıcı`;
        }

        function updateTotalPlayerCount(count) {
            const totalPlayerCountElement = f("#totalPlayerCount");
            totalPlayerCountElement.textContent = `Toplam kişi sayısı: ${count}`;
        }

        function addPlayers(users, roomlink) {
            const usersContainer = f("#usersContainer");
            totalPlayerCount += users.length;
            updateTotalPlayerCount(totalPlayerCount);
            updatePlayerCount(users.length);

            users.forEach(user => {
                const foto = user.foto || "https://gartic.io/static/images/avatar/svg/" + user.avatar + ".svg";
                const uclass = user.foto ? "havefoto" : "nofoto";

                usersContainer.innerHTML += `
                    <div class="user ${uclass}">
                        <img src="${foto}" alt="">
                        <div>
                            <b>${user.nick}</b>
                            <i>${user.pontos} pt</i><br>
                            <a target="_blank" href="https://gartic.io/${roomlink}">#${roomlink}</a><br>
                            <span class="download-btn" onclick="openProfile('${user.nick}', '${foto}')">Profili Görüntüle</span>
                        </div>
                    </div>
                `;
            });
        }

        function openProfile(nick, foto) {
            const profileContainer = f("#profileContainer");
            const profileTitle = f("#profileTitle");
            const profileImage = f("#profileImage");
            const profileName = f("#profileName");

            profileTitle.textContent = `Profil: ${nick}`;
            profileImage.src = foto;
            profileImage.alt = `${nick}'s Profile Photo`;
            profileName.textContent = `Kullanıcı Adı: ${nick}`;

            profileContainer.style.display = 'flex';
        }

        function closeProfile() {
            const profileContainer = f("#profileContainer");
            profileContainer.style.display = 'none';
        }

        function searchUsers() {
            const users = fa(".user");
            const searchInput = f("#searchInput").value.toLowerCase();

            users.forEach(user => {
                const userName = user.querySelector("b").textContent.toLowerCase();
                user.style.display = userName.includes(searchInput) ? "block" : "none";
            });

            updatePlayerCount(document.querySelectorAll('.user[style="display: block;"]').length);
        }

        function filterUsers() {
            const users = fa(".user");
            const havefotoCheckbox = f("#havefotoCheckbox");
            const nofotoCheckbox = f("#nofotoCheckbox");

            const isHaveFotoChecked = havefotoCheckbox.checked;
            const isNoFotoChecked = nofotoCheckbox.checked;

            if (!isHaveFotoChecked && !isNoFotoChecked) {
                users.forEach(user => {
                    user.style.display = "none";  // Hiçbir kullanıcı görünmemeli
                });
            } else {
                users.forEach(user => {
                    const havefoto = user.classList.contains("havefoto");
                    const nofoto = user.classList.contains("nofoto");

                    if ((isHaveFotoChecked && havefoto) || (isNoFotoChecked && nofoto)) {
                        user.style.display = "block";
                    } else {
                        user.style.display = "none";
                    }
                });
            }

            updatePlayerCount(document.querySelectorAll('.user[style="display: block;"]').length);
        }

        function listusers(lang) {
            const usersContainer = f("#usersContainer");
            usersContainer.innerHTML = "";

            fetch(`https://gartic.io/req/list?search=&language[]=${lang}`)
                .then(x => x.json())
                .then(rooms => {
                    let index = 0;

                    function getData(rooms) {
                        if (index == rooms.length) return;

                        const room = rooms[index];
                        index++;

                        addPlayers(room.users, room.room);
                        setTimeout(() => { getData(rooms); }, 100);
                    }

                    getData(rooms);
                })
                .catch(e => { console.error(e); });
        }

        listusers("tr");
    </script>
</body>
</html>
